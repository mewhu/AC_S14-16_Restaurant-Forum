<% if @restaurant.errors.present? %>
  <ul>
    <% @restaurant.errors.each do |error, message| %>
      <li> <%= "#{error.capitalize}  #{message}" %></li>
    <% end %>
  </ul>
<% end %>

<%#= form_for @restaurant, :url => admin_restaurants_path, :method => :post do |f| %>
<%# 但是也可以不用寫:url及:method, 改用把@restaurant指定得更精確的寫法--> [:admin, @restaurant]：好處是重構時較方便, 都靠rails自己判斷new或edit即可 %>
<%= form_for [:admin, @restaurant] do |f| %>
  
  <%# 原始第一個"object"參數 :restaurant 在此處可省略，因為collection_select有為form_for特別寫一個多型 %>
  <%# 原始第六個"options"參數填prompt:true -> 在下拉式秀出"please select"的預設選項%>
  <%# 原始第7個"html options"參數填入想要放的css效果, 此處引用bootstrap既有的class%>
  <%= 
    f.collection_select(
      :category_id,
      Category.all,
      :id,
      :name,
      {prompt: true},
      {class: "form-control"}
    ) 
  %>

  <%= f.label :name, "Name" %>
  <%= f.text_field :name %>

  <%= f.label :tel, "Tel" %>
  <%= f.text_field :tel %>

  <%= f.label :address, "Address" %>
  <%= f.text_field :address %>

  <%= f.label :opening_hours, "Opening Hours" %>
  <%= f.text_field :opening_hours %>

  <%= f.label :description, "Description" %>
  <%= f.text_area :description %>

  <%= f.label :image, "Image" %>
  <%# Rails物件的attribute都會自帶"?"方法，判斷是否有值 %>
  <% if @restaurant.image? %>
    <%# 用了"carrierwave"以後，最好用加上".url"的方式去access image，免得搭配(:thumb)調尺寸時會爆紅畫面 %>
    <%= image_tag @restaurant.image.url, width: '300px' %>
  <% end %>
  <%= f.file_field :image %>

  <%= f.submit %>
<% end %>